INSERT INTO `goods`(`goods_id`, `name`, `cost`, `price`, `dep_id`) VALUES (1, '电视', '1500', 2999.00, 5);




INSERT INTO `stuff`(`stuff_Id`, `name`, `position`, `contacts`, `address`, `age`, `dep_id`) VALUES (1, '王元新', '幕后老板', '353142796', '南山', '19', 4);
INSERT INTO `stuff`(`stuff_Id`, `name`, `position`, `contacts`, `address`, `age`, `dep_id`) VALUES (2, '尹奕萌', '幕后员工', '15456624', '九龙坡', '19', 1);
INSERT INTO `stuff`(`stuff_Id`, `name`, `position`, `contacts`, `address`, `age`, `dep_id`) VALUES (3, 'xiao', '售货员', '1582398777', '渝北', '18', 2);
INSERT INTO `stuff`(`stuff_Id`, `name`, `position`, `contacts`, `address`, `age`, `dep_id`) VALUES (4, 'da', '理货员', '15823987898', '南岸', '24', 3);

INSERT INTO `department`(`Id`, `Name`, `ManagerName`, `ManagerContactInformation`, `ManagerAddress`) VALUES (1, '生鲜', '老大', '545454', '南岸');
INSERT INTO `department`(`Id`, `Name`, `ManagerName`, `ManagerContactInformation`, `ManagerAddress`) VALUES (2, '蔬菜', '老二', '15878985657', '渝中');
INSERT INTO `department`(`Id`, `Name`, `ManagerName`, `ManagerContactInformation`, `ManagerAddress`) VALUES (3, '零食', 'nihao', '35477', '重邮');
INSERT INTO `department`(`Id`, `Name`, `ManagerName`, `ManagerContactInformation`, `ManagerAddress`) VALUES (4, '饮品', '老板', '15823987777', '渝北');
import java.sql.*;

public class Merchant {
    private String name;
    private String contacts;
    private String address;

    Merchant(String name,String contacts,String address) {
        this.address =address;
        this.contacts = contacts;
        this.name = name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public void setContacts(String contacts) {
        this.contacts = contacts;
    }

    public void setAddress(String address) {
        this.address = address;
    }

    public String getName() {
        return name;
    }

    public String getContacts() {
        return contacts;
    }

    public String getAddress() {
        return address;
    }

    private static Connection getConn() {
        String driver = "com.mysql.jdbc.Driver";
        String url="jdbc:mysql://localhost:3306/homework?"+ "useUnicode=true&characterEncoding=UTF8";
        String username = "root";
        String password = "";
        Connection conn = null;
        try {
            Class.forName(driver); //classLoader,加载对应驱动
            conn = (Connection) DriverManager.getConnection(url, username, password);
        } catch (ClassNotFoundException e) {
            e.printStackTrace();
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return conn;
    }
    private static int insert(Merchant merchant) {
        Connection conn = getConn();
        int i = 0;
        String sql = "insert into Merchant (name,contacts,address) values(?,?,?)";
        PreparedStatement pstmt;
        try {
            pstmt = (PreparedStatement) conn.prepareStatement(sql);
            pstmt.setString(1,merchant.getName());
            pstmt.setString(2,merchant.getContacts());
            pstmt.setString(3,merchant.getAddress());
            i = pstmt.executeUpdate();
            if(i == 1) System.out.println("修改成功");
            pstmt.close();
            conn.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return i;
    }
    private static int update(Merchant merchant) {
        Connection conn = getConn();
        int i = 0;
        String sql = "update Merchant set contact=?,address=? where name=?";
        PreparedStatement pstmt;
        try {
            pstmt = (PreparedStatement) conn.prepareStatement(sql);
            pstmt.setString(3,merchant.getName());
            pstmt.setString(1,merchant.getContacts());
            pstmt.setString(2,merchant.getAddress());
            i = pstmt.executeUpdate();
            pstmt.close();
            conn.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return i;
    }
    private static Integer getAll() {
        Connection conn = getConn();
        String sql = "select * from Merchant";
        PreparedStatement pstmt;
        try {
            pstmt = (PreparedStatement)conn.prepareStatement(sql);
            ResultSet rs = pstmt.executeQuery();
            int col = rs.getMetaData().getColumnCount();
            System.out.println("============================");
            while (rs.next()) {
                for (int i = 1; i <= col; i++) {
                    System.out.print(rs.getString(i) + "\t");
                }
                System.out.println("");
            }
            System.out.println("============================");
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return null;
    }
    private static int delete(String name) {
        Connection conn = getConn();
        int i = 0;
        String sql = "delete from Goods where ManagerName='" + name + "'";
        PreparedStatement pstmt;
        try {
            pstmt = (PreparedStatement) conn.prepareStatement(sql);
            i = pstmt.executeUpdate();
            if(i==1)   System.out.println("删除成功");
            pstmt.close();
            conn.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return i;
    }
    public static void main(String args[]) {
        Merchant.getAll();
    }
}

import java.sql.*;

public class Stuff {
    private String stuff_id;
    private String name;
    private String position;
    private String contacts;
    private String address;
    private String age;
    private String dep_id;

    Stuff(String stuff_id,String name,String position,String contacts,String address,String age,String dep_id) {
        this.stuff_id = stuff_id; //default
        this.name = name;
        this.position = position;
        this.contacts = contacts;
        this.address = address;
        this.age = age;
        this.dep_id =dep_id;
    }

    public String getName() {
        return name;
    }

    public String getAddress() {
        return address;
    }

    public String getAge() {
        return age;
    }

    public String getContacts() {
        return contacts;
    }

    public String getDep_id() {
        return dep_id;
    }

    public String getPosition() {
        return position;
    }

    public String getStuff_id() {
        return stuff_id;
    }

    public void setName(String name) {
        this.name = name;
    }

    public void setAddress(String address) {
        this.address = address;
    }

    public void setAge(String age) {
        this.age = age;
    }

    public void setContacts(String contacts) {
        this.contacts = contacts;
    }

    public void setDep_id(String dep_id) {
        this.dep_id = dep_id;
    }

    public void setPosition(String position) {
        this.position = position;
    }

    public void setStuff_id(String stuff_id) {
        this.stuff_id = stuff_id;
    }

    private static Connection getConn() {
        String driver = "com.mysql.jdbc.Driver";
        String url="jdbc:mysql://localhost:3306/homework?"+ "useUnicode=true&characterEncoding=UTF8";
        String username = "root";
        String password = "";
        Connection conn = null;
        try {
            Class.forName(driver); //classLoader,加载对应驱动
            conn = (Connection) DriverManager.getConnection(url, username, password);
        } catch (ClassNotFoundException e) {
            e.printStackTrace();
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return conn;
    }
    private static int insert(Stuff stuff) {
        Connection conn = getConn();
        int i = 0;
        String sql = "insert into Stuff (stuff_id,name,position,contacts,address,age,dep_id) values(?,?,?,?,?,?,?)";
        PreparedStatement pstmt;
        try {
            pstmt = (PreparedStatement) conn.prepareStatement(sql);
            pstmt.setString(1, stuff.getStuff_id());
            pstmt.setString(2, stuff.getName());
            pstmt.setString(3, stuff.getPosition());
            pstmt.setString(4, stuff.getContacts());
            pstmt.setString(5, stuff.getAddress());
            pstmt.setString(6, stuff.getAge());
            pstmt.setString(7,stuff.getDep_id());
            i = pstmt.executeUpdate();
            if(i == 1) System.out.println("修改成功");
            pstmt.close();
            conn.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return i;
    }
    private static int update(Stuff stuff) {
        Connection conn = getConn();
        int i = 0;
        String sql = "update Stuff set stuff_id=?,position=?,contacts=?,address=?,age=? where name=?";
        PreparedStatement pstmt;
        try {
            pstmt = (PreparedStatement) conn.prepareStatement(sql);
            pstmt.setString(1, stuff.getStuff_id());
            pstmt.setString(2, stuff.getName());
            pstmt.setString(3, stuff.getPosition());
            pstmt.setString(4, stuff.getContacts());
            pstmt.setString(5, stuff.getAddress());
            pstmt.setString(6, stuff.getAge());
            pstmt.setString(7,stuff.getDep_id());
            i = pstmt.executeUpdate();
            pstmt.close();
            conn.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return i;
    }
    private static Integer getAll() {
        Connection conn = getConn();
        String sql = "select * from Stuff";
        PreparedStatement pstmt;
        try {
            pstmt = (PreparedStatement)conn.prepareStatement(sql);
            ResultSet rs = pstmt.executeQuery();
            int col = rs.getMetaData().getColumnCount();
            System.out.println("============================");
            while (rs.next()) {
                for (int i = 1; i <= col; i++) {
                    System.out.print(rs.getString(i) + "\t");
                }
                System.out.println("");
            }
            System.out.println("============================");
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return null;
    }
    private static int delete(String name) {
        Connection conn = getConn();
        int i = 0;
        String sql = "delete from Department where ManagerName='" + name + "'";
        PreparedStatement pstmt;
        try {
            pstmt = (PreparedStatement) conn.prepareStatement(sql);
            i = pstmt.executeUpdate();
            if(i==1)   System.out.println("删除成功");
            pstmt.close();
            conn.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return i;
    }
    public static void main(String args[]) {
        Stuff.getAll();
        Stuff.insert(new Stuff("3", "xiao", "售货员","1582398777","渝北","18","2"));
        Stuff.getAll();
        Stuff.insert(new Stuff("4", "da", "理货员","15823987898","南岸","24","3"));
        Stuff.getAll();
    }
}

import java.sql.*;

public class Department {
    private String Id;
    private String Name;
    private String ManagerName;
    private String ManagerContactInfomation;
    private String ManagerAddress;

    Department(String Id,String Name, String ManagerName, String ManagerContactInformation, String ManagerAdress) {
        this.Id = Id; //default
        this.Name = Name;
        this.ManagerName = ManagerName;
        this.ManagerContactInfomation = ManagerContactInformation;
        this.ManagerAddress = ManagerAdress;
    }

    public String getId() {
        return Id;
    }

    public String getName() {
        return Name;
    }

    public String getManagerName() {
        return ManagerName;
    }

    public String getManagerContactInfomation() {
        return ManagerContactInfomation;
    }

    public String getManagerAddress() {
        return ManagerAddress;
    }

    public void setId(String id) {
        Id = id;
    }

    public void setName(String name) {
        Name = name;
    }

    public void setManagerName(String managerName) {
        ManagerName = managerName;
    }

    public void setManagerContactInfomation(String managerContactInfomation) {
        ManagerContactInfomation = managerContactInfomation;
    }

    public void setManagerAddress(String managerAdress) {
        ManagerAddress = managerAdress;
    }
    private static Connection getConn() {
        String driver = "com.mysql.jdbc.Driver";
        String url="jdbc:mysql://localhost:3306/homework?"+ "useUnicode=true&characterEncoding=UTF8";
        String username = "root";
        String password = "";
        Connection conn = null;
        try {
            Class.forName(driver); //classLoader,加载对应驱动
            conn = (Connection) DriverManager.getConnection(url, username, password);
        } catch (ClassNotFoundException e) {
            e.printStackTrace();
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return conn;
    }
    private static int insert(Department department) {
        Connection conn = getConn();
        int i = 0;
        String sql = "insert into Department (Id,Name,ManagerName,ManagerContactInformation,ManagerAddress) values(?,?,?,?,?)";
        PreparedStatement pstmt;
        try {
            pstmt = (PreparedStatement) conn.prepareStatement(sql);
            pstmt.setString(1, department.getId());
            pstmt.setString(2, department.getName());
            pstmt.setString(3, department.getManagerName());
            pstmt.setString(4, department.getManagerContactInfomation());
            pstmt.setString(5, department.getManagerAddress());
            i = pstmt.executeUpdate();
            if(i == 1) System.out.println("修改成功");
            pstmt.close();
            conn.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return i;
    }
    private static int update(Department department) {
        Connection conn = getConn();
        int i = 0;
        String sql = "update Department set Id=?,ManagerName=?,ManagerContactInformation=?,ManagerAddress=? where name=?";
        PreparedStatement pstmt;
        try {
            pstmt = (PreparedStatement) conn.prepareStatement(sql);
            pstmt.setString(1, department.getId());
            pstmt.setString(5, department.getName());
            pstmt.setString(2, department.getManagerName());
            pstmt.setString(3, department.getManagerContactInfomation());
            pstmt.setString(4, department.getManagerAddress());
            i = pstmt.executeUpdate();
            pstmt.close();
            conn.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return i;
    }
    private static Integer getAll() {
        Connection conn = getConn();
        String sql = "select * from Department";
        PreparedStatement pstmt;
        try {
            pstmt = (PreparedStatement)conn.prepareStatement(sql);
            ResultSet rs = pstmt.executeQuery();
            int col = rs.getMetaData().getColumnCount();
            System.out.println("============================");
            while (rs.next()) {
                for (int i = 1; i <= col; i++) {
                    System.out.print(rs.getString(i) + "\t");
                }
                System.out.println("");
            }
            System.out.println("============================");
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return null;
    }
    private static int delete(String Managername) {
        Connection conn = getConn();
        int i = 0;
        String sql = "delete from Department where ManagerName='" + Managername + "'";
        PreparedStatement pstmt;
        try {
            pstmt = (PreparedStatement) conn.prepareStatement(sql);
            i = pstmt.executeUpdate();
            if(i==1)   System.out.println("删除成功");
            pstmt.close();
            conn.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return i;
    }
    public static void main(String args[]) {
        Department.getAll();
        Department.update(new Department("3","零食","nihao","35477","重邮"));
        Department.getAll();
    }
}

import java.sql.*;

public class Goods {
    private String goods_id;
    private String name;
    private String cost;
    private String price;
    private String dep_id;

    Goods(String goods_id,String name, String cost, String price, String dep_id) {
        this.goods_id = goods_id; //default
        this.name = name;
        this.cost = cost;
        this.price = price;
        this.dep_id = dep_id;
    }

    public String getDep_id() {
        return dep_id;
    }

    public String getName() {
        return name;
    }

    public String getCost() {
        return cost;
    }

    public String getGoods_id() {
        return goods_id;
    }

    public String getPrice() {
        return price;
    }

    public void setDep_id(String dep_id) {
        this.dep_id = dep_id;
    }

    public void setName(String name) {
        this.name = name;
    }

    public void setCost(String cost) {
        this.cost = cost;
    }

    public void setGoods_id(String goods_id) {
        this.goods_id = goods_id;
    }

    public void setPrice(String price) {
        this.price = price;
    }

    private static Connection getConn() {
        String driver = "com.mysql.jdbc.Driver";
        String url="jdbc:mysql://localhost:3306/homework?"+ "useUnicode=true&characterEncoding=UTF8";
        String username = "root";
        String password = "";
        Connection conn = null;
        try {
            Class.forName(driver); //classLoader,加载对应驱动
            conn = (Connection) DriverManager.getConnection(url, username, password);
        } catch (ClassNotFoundException e) {
            e.printStackTrace();
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return conn;
    }
    private static int insert(Goods goods) {
        Connection conn = getConn();
        int i = 0;
        String sql = "insert into Goods (goods_id,name,cost,price,dep_id) values(?,?,?,?,?)";
        PreparedStatement pstmt;
        try {
            pstmt = (PreparedStatement) conn.prepareStatement(sql);
            pstmt.setString(1, goods.getGoods_id());
            pstmt.setString(2, goods.getName());
            pstmt.setString(3, goods.getCost());
            pstmt.setString(4, goods.getPrice());
            pstmt.setString(5, goods.getDep_id());
            i = pstmt.executeUpdate();
            if(i == 1) System.out.println("修改成功");
            pstmt.close();
            conn.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return i;
    }
    private static int update(Goods goods) {
        Connection conn = getConn();
        int i = 0;
        String sql = "update Goods set goods_id=?,cost=?,price=?,dep_id=? where name=?";
        PreparedStatement pstmt;
        try {
            pstmt = (PreparedStatement) conn.prepareStatement(sql);
            pstmt.setString(1, goods.getGoods_id());
            pstmt.setString(5, goods.getName());
            pstmt.setString(2, goods.getCost());
            pstmt.setString(3, goods.getPrice());
            pstmt.setString(4, goods.getDep_id());
            i = pstmt.executeUpdate();
            pstmt.close();
            conn.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return i;
    }
    private static Integer getAll() {
        Connection conn = getConn();
        String sql = "select * from Goods";
        PreparedStatement pstmt;
        try {
            pstmt = (PreparedStatement)conn.prepareStatement(sql);
            ResultSet rs = pstmt.executeQuery();
            int col = rs.getMetaData().getColumnCount();
            System.out.println("============================");
            while (rs.next()) {
                for (int i = 1; i <= col; i++) {
                    System.out.print(rs.getString(i) + "\t");
                }
                System.out.println("");
            }
            System.out.println("============================");
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return null;
    }
    private static Integer search() {
        Connection conn = getConn();
        String sql = "SELECT * FROM Goods WHERE price like '2%'";
        PreparedStatement pstmt;
        try {
            pstmt = (PreparedStatement)conn.prepareStatement(sql);
            ResultSet rs = pstmt.executeQuery();
            int col = rs.getMetaData().getColumnCount();
            System.out.println("============================");
            while (rs.next()) {
                for (int i = 1; i <= col; i++) {
                    System.out.print(rs.getString(i) + "\t");
                }
                System.out.println("");
            }
            System.out.println("============================");
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return null;
    }
    private static int delete(String name) {
        Connection conn = getConn();
        int i = 0;
        String sql = "delete from Goods where ManagerName='" + name + "'";
        PreparedStatement pstmt;
        try {
            pstmt = (PreparedStatement) conn.prepareStatement(sql);
            i = pstmt.executeUpdate();
            if(i==1)   System.out.println("删除成功");
            pstmt.close();
            conn.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return i;
    }
    public static void main(String args[]) {
        Goods.getAll();
        System.out.println("价格为20+,200+或2000+的商品如下：");
        Goods.search();
    }
}
